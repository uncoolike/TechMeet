@model TechMeet.UI.MVC.Models.ContactViewModel

@{
    ViewBag.Title = "Contact";
}
<style>
    textarea {
        resize: none;
    }
</style>
<div class="paper space" style="width:70%;">
    <h2 class="spaceup">@ViewBag.Title</h2>

    <div id="contactForm" class="center col-md-offset-2">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <br />
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4 col-md-offset-2">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4  col-md-offset-2">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4  col-md-offset-2">
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4 col-md-offset-2">
                        @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Send Email" class="btn brows-btn btn-pdf-ib col-md-3" />
                    </div>
                </div>
            </div>
        }
    </div>

    @if (ViewBag.CustomerMessage != null)
    {
        <h4>@Html.Raw(ViewBag.CustomerMessage)</h4>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}